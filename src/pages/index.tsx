/* eslint-disable @typescript-eslint/no-unsafe-assignment */
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";

interface IData {
  totalSupply?: number,
  symbol?: string,
  name?: string
}
const Home: NextPage = () => {
  const [coinAddress, setCoinAddress] = useState("");
  const [coinInfo, setCoinInfo] = useState<IData>({});
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<unknown>("");
  const [open, setOpen] = useState(false);
  const intl = new Intl.NumberFormat("en-US" , { notation: 'compact' });

  const getData = async () => {
    try {
      setLoading(true);
      const res = await fetch(
        `http://localhost:3000/api/${coinAddress}`
      );
      const data: IData = await res.json();
      setCoinInfo(data);
      setOpen(true);
      setLoading(false);
    } catch (err) {
      setError(err);
      setLoading(false);
    
    }
  };
  console.log(coinInfo)
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-[#FCF8FE] h-screen w-full flex flex-col items-center justify-center relative">
        <div className="flex flex-col items-center justify-center h-1/3 justify-between">
          <h2 className="text-6xl text-[#300048] font-bold">Coin Info Dapp</h2>
          <div className="flex flex-col gap-5 w-full">
            <input
              className="border-2 border-[#300048] rounded-md px-4 py-3 w-full"
              placeholder="Enter Coin Address"
              value={coinAddress}
              onChange={(e) => setCoinAddress(e.target.value)}
            />
            <button
              className="bg-[#300048] text-white rounded-md px-4 py-3 w-full"
              onClick={() => void getData()}
            >
              Get Info
            </button>
          </div>
        </div>
        <div
          className={`absolute z-20 w-full h-[90%] bottom-0 bg-[#300048] rounded-t-[30px] text-white transition-translate ease-in duration-300 ${
            open ? "translate-y-0" : "translate-y-[130%]"
          }`}
        >
          <span
            className="absolute top-8 right-8 absolute"
            onClick={() => setOpen(false)}
          >
            close
          </span>
          <div className="flex flex-col items-center justify-center h-full gap-8">
            <div className="flex items-center px-6 py-2 rounded-full border-2 border-white">
            <span className="w-36" style={{
              textOverflow: "ellipsis",
              overflow: "hidden",
              whiteSpace: "nowrap"

            }}>
              {coinAddress}
            </span>
            </div>
            <h2 className="text-4xl font-bold">Coin Info</h2>
            <div className="flex lg:flex-row flex-col w-9/12 mx-auto px-6 py-5 justify-between gap-5 w-full font-bold border-2 border-white">
              <div className="flex flex-col gap-2 w-full items-center">
                <span>Name</span>
                <span className="text-4xl font-bold">{coinInfo?.name}</span>
              </div>
              <div className="h-3/4 w-[2px] bg-white my-auto" />
              <div className="flex flex-col gap-2 w-full items-center">
                <span>Symbol</span>
                <span className="text-4xl font-bold">{coinInfo?.symbol}</span>
              </div>
              <div className="h-3/4 w-[2px] bg-white my-auto" />
              <div className="flex flex-col gap-2 w-full items-center">
                <span>Total Supply</span>
                <span className="text-4xl font-bold">
                  {intl.format(coinInfo?.totalSupply || 0)}
                </span>
              </div>
            </div>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
